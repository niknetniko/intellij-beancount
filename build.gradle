import org.jetbrains.grammarkit.tasks.GenerateLexer
import org.jetbrains.grammarkit.tasks.GenerateParser

plugins {
    id 'io.franzbecker.gradle-lombok' version '4.0.0'
    id 'org.jetbrains.intellij' version '1.0'
    id "org.jetbrains.grammarkit" version "2021.1.3"
    id 'java'
    id 'idea'
}

apply {
    plugin "idea"
    plugin "java"
    plugin "org.jetbrains.grammarkit"
    plugin "org.jetbrains.intellij"
}

group 'com.outskirtslabs'

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java.srcDirs("src/main/gen", "src/main/java")
        resources.srcDirs("src/main/resources")
    }
    test {
        java.srcDirs("src/test/kotlin")
        resources.srcDirs("src/test/resources")
    }
}

idea {
    module {
        generatedSourceDirs += file('src/main/gen')
    }
}

intellij {
    version = ideaVersion
    // always have these plugins installed
    plugins = ['java', 'com.intellij.java', 'PsiViewer:211-SNAPSHOT', 'tanvd.grazi']
    downloadSources = true
    pluginName = 'intelliledge'
    updateSinceUntilBuild = false
}

runPluginVerifier {
    ideVersions = ["IC-2021.1"]
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

dependencies {
    compile 'net.objecthunter:exp4j:0.4.8'
}

grammarKit {
    jflexRelease = "1.7.0-1" // 1.7.0
    grammarKitRelease = "2020.3.1"
}

task generateBeancountLexer(type: GenerateLexer) {
    source = "src/main/java/com/outskirtslabs/beancount/Beancount.flex"
    targetDir = "src/gen/java/com/outskirtslabs/beancount/"
    targetClass = "_BeancountLexer"
    purgeOldFiles = true
}

task generateBeancountParser(type: GenerateParser) {
    source = "src/main/java/com/outskirtslabs/beancount/Beancount.bnf"
    targetRoot = 'src/gen/java'
    pathToParser = '/com/outskirtslabs/beancount/parser/BeancountParser.java'
    pathToPsiRoot = '/com/outskirtslabs/beancount/psi'
    purgeOldFiles = true
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}
